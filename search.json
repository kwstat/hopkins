[{"path":"https://kwstat.github.io/hopkins/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 hopkins authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwstat.github.io/hopkins/articles/hopkins_protocol.html","id":"a-protocol-for-using-hopkins-statistic","dir":"Articles","previous_headings":"","what":"A protocol for using Hopkins statistic","title":"A protocol for Hopkins statistic","text":"data need scaled? number events n>100n > 100 number randomly-sampled events 10% nn? recommended Cross Jain (1982). spatial randomness events even possible? events known suspected correlated, violates null hypothesis spatial uniformity, may also mean sampling frame shaped like hypercube. nearest-neighbor events occurred outside boundary sampling frame? yes, may appropriate calculate nearest-neighbor distances using torus geometry. sampling frame non-rectangular? yes, extremely careful use Hopkins statistic points samples UU. dimension data much greater 2? Edge effects common higher dimensions. important point protocol raise awareness potential problems. leave practitioner decide answers questions.","code":""},{"path":"https://kwstat.github.io/hopkins/articles/hopkins_protocol.html","id":"example-1","dir":"Articles","previous_headings":"A protocol for using Hopkins statistic","what":"Example 1","title":"A protocol for Hopkins statistic","text":"can simulate 1000 points uniformly unit square calculate Hopkins statistic, 0.52.","code":"library(hopkins) set.seed(42) dat1 <- matrix(runif(2000), ncol=2) plot(dat1) hopkins(dat1) # .52 ## [1] 0.5217802"},{"path":"https://kwstat.github.io/hopkins/articles/hopkins_protocol.html","id":"example-2","dir":"Articles","previous_headings":"A protocol for using Hopkins statistic","what":"Example 2","title":"A protocol for Hopkins statistic","text":"Simulate 1000 points bivariate normal distribution (0 covariance). sampling frame generating new points uu minimum value maximum value events axis. Roughly -3 3 Normal data. points form circular “cluster” within bounding box value Hopkins statistic 0.89.","code":"set.seed(42) dat2 <- matrix(rnorm(1000), ncol=2) plot(dat2) hopkins(dat2) # .89 ## [1] 0.8927865"},{"path":"https://kwstat.github.io/hopkins/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Wright. Author, maintainer, copyright holder.","code":""},{"path":"https://kwstat.github.io/hopkins/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wright K (2024). hopkins: Calculate Hopkins Statistic Clustering. R package version 1.1, https://kwstat.github.io/hopkins/.","code":"@Manual{,   title = {hopkins: Calculate Hopkins Statistic for Clustering},   author = {Kevin Wright},   year = {2024},   note = {R package version 1.1},   url = {https://kwstat.github.io/hopkins/}, }"},{"path":"https://kwstat.github.io/hopkins/index.html","id":"hopkins-","dir":"","previous_headings":"","what":"Calculate Hopkins Statistic for Clustering","title":"Calculate Hopkins Statistic for Clustering","text":"Homepage: https://kwstat.github.io/hopkins Repository: https://github.com/kwstat/hopkins","code":""},{"path":"https://kwstat.github.io/hopkins/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Calculate Hopkins Statistic for Clustering","text":"hopkins() function: Can assess spatial distribution points randomness. Correctly calculates Hopkins statistic using exponents d=D. fast method=\"simple\". Can use method=\"torus\" correct edge effects higher dimensions. believe software implementations Hopkins statistics incorrect use “d=1” exponent distances calculation instead “d=2” 2-dimensional data general “d=D” D-dimensional data. full details, see Wright (2023), “Real Hopkins Statistic Please Stand ”, https://journal.r-project.org/articles/RJ-2022-055/","code":""},{"path":"https://kwstat.github.io/hopkins/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Hopkins Statistic for Clustering","text":"","code":"# Install the released version from CRAN: install.packages(\"hopkins\")  # Install the development version from GitHub: install.packages(\"devtools\") devtools::install_github(\"kwstat/hopkins\")"},{"path":"https://kwstat.github.io/hopkins/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Calculate Hopkins Statistic for Clustering","text":"","code":"library(hopkins) hopkins(iris[, -5], m=15) # .9952293 hopkins.pval(0.21, 10) # .00466205"},{"path":"https://kwstat.github.io/hopkins/index.html","id":"guidelines-for-using-hopkins-statistic","dir":"","previous_headings":"","what":"Guidelines for using Hopkins statistic","title":"Calculate Hopkins Statistic for Clustering","text":"easy mis-use Hopkins statistic. things MUST think . See vignettes details. data need centered scaled unit variance?? number events n > 100 number randomly-sampled events 10% n? spatial randomness events even possible? events known suspected correlated, violates null hypothesis spatial uniformity, may also mean sampling frame shaped like hypercube. nearest-neighbor events occurred outside boundary sampling frame? yes, may appropriate calculate nearest-neighbor distances using torus geometry. sampling frame non-rectangular? yes, extremely careful use Hopkins statistic points samples UU. dimension data much greater 2? Edge effects common higher dimensions. dimension data large? difficult detect spatial randomness large number dimensions.","code":""},{"path":"https://kwstat.github.io/hopkins/index.html","id":"about-the-logo","dir":"","previous_headings":"","what":"About the logo","title":"Calculate Hopkins Statistic for Clustering","text":"Hopkins statistic attempts assess spatial distribution points. Prairie dogs cluster together burrows, burrows spaced somewhat evenly apart . Also, prairie dogs (sort ) “hop”, “kins” “endearing” “group similar characteristics”. “hopkins” mean “cute group hoppers” (prairie dogs).","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":null,"dir":"Reference","previous_headings":"","what":"Hopkins statistics for clustering tendency — hopkins","title":"Hopkins statistics for clustering tendency — hopkins","text":"Calculate Hopkins statistic given data.","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hopkins statistics for clustering tendency — hopkins","text":"","code":"hopkins(   X,   m = ceiling(nrow(X)/10),   d = ncol(X),   k = 1,   U = NULL,   method = \"simple\" )"},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hopkins statistics for clustering tendency — hopkins","text":"X Data (matrix data.frame) check clusterability. m Number rows sample X. Default 1/10th number rows X. d Dimension data (number columns X). k kth nearest neighbor find. U Data containing m uniformly-sampled points. method Either \"simple\" \"torus\".","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hopkins statistics for clustering tendency — hopkins","text":"value Hopkins statistic.","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hopkins statistics for clustering tendency — hopkins","text":"Calculated values 0-0.3 indicate regularly-spaced data. Values around 0.5 indicate random data. Values 0.7-1 indicate clustered data. CAUTION: function center scale columns X. may need manually using function. set parameter 'd'. included allow comparisons hopkins::hopkins() clustertend::hopkins(). data U also normally set user.  included allow unit testing also customization uniformly-sampled points (e.g. enlarged 5 percent suggested authors). authors suggest sampling less 10 percent points. Others suggest m>10 points avoid small-sample problems. distribution Hopkins statistic requires nearest neighbors selected points mutually independent, points can marked.  distribution Hopkins statistic Beta(m,m), independent dimensionality data d. Cross & Jain say \"m sampling points enough number, relative n (number events), presence materially affect  overall density.  Ratios least 10 1 preferably 20 1 used literature. hand, seems m least 10 order avoid small sample problems distributions statistics.  effectively  limits methods problems least 100 events.  high dimensions, little can said data sets sparser .\" Note: Comparison hopkins::hopkins() clustertend::hopkins(). `hopkins::hopkins()` function uses distances^d (\"distance\" Euclidean distance points \"d\" number columns data). value returned : Hopkins statistic. `clustertend::hopkins()` function uses distances^1. value returned : 1 - Hopkins statistic.","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hopkins statistics for clustering tendency — hopkins","text":"Hopkins, B. Skellam, J.G., 1954. new method determining type distribution plant individuals. Annals Botany, 18(2), pp.213-227. Cross, G. R., . K. Jain. (1982). Measurement clustering tendency. Theory Application Digital Control. Pergamon, 1982. 315-320.","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hopkins statistics for clustering tendency — hopkins","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hopkins statistics for clustering tendency — hopkins","text":"","code":"set.seed(1) hopkins(iris[, 1:4], m=15) # .9952293 #> [1] 0.9952293  hop <- rep(NA, 100) for(i in 1:100){   hop[i] <- hopkins(iris[,1:4], m=8) } mean(hop) #> [1] 0.9967928"},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the p-value for Hopkins statistic — hopkins.pval","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"Calculate p-value Hopkins statistic","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"","code":"hopkins.pval(x, n)"},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"x Observed value Hopkins statistic n Number events/points sampled.","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"p-value 0 1.","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"null hypothesis spatial randomness, Hopkins statistic Beta(m,m) distribution, 'm' number events/points sampled. function calculates p-value statistic.","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"Michael T. Gastner (2005). Spatial distributions: Density-equalizing map projections, facility location, two-dimensional networks. Ph.D. dissertation, Univ. Michigan (Ann Arbor, 2005). http://hdl.handle.net/2027.42/125368","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"Kevin Wright","code":""},{"path":"https://kwstat.github.io/hopkins/reference/hopkins.pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the p-value for Hopkins statistic — hopkins.pval","text":"","code":"hopkins.pval(0.21, 10) # .00466205 #> [1] 0.00466205"},{"path":"https://kwstat.github.io/hopkins/news/index.html","id":"hopkins-11-2023-08-19","dir":"Changelog","previous_headings":"","what":"hopkins 1.1 (2023-08-19)","title":"hopkins 1.1 (2023-08-19)","text":"CRAN release: 2023-08-20","code":""},{"path":"https://kwstat.github.io/hopkins/news/index.html","id":"hopkins-10-2022-01-17","dir":"Changelog","previous_headings":"","what":"hopkins 1.0 (2022-01-17)","title":"hopkins 1.0 (2022-01-17)","text":"CRAN release: 2022-01-17 First release CRAN. Replaces clustertend package.","code":""}]
